#!/bin/bash

# Get the jupyter notebook `test_millefy.ipynb` from https://github.com/yuifu/datascience-notebook-millefy
curl -OL https://raw.githubusercontent.com/yuifu/datascience-notebook-millefy/master/examples/test_millefy.ipynb

# Add pointer to the notebook that demonstrates handling BAM files
#----------------------------------------------------------------#
# Save Python code as script to run - using Python because nbformat makes this easy; building the script into the `postBuild` file means I have less to track
cat > add_additional_cell.py <<EOF 
import nbformat as nbf
content_for_additional_md_cell ='''--------------------

Above was the end of [the original notebook by the Millefy developer](https://nbviewer.org/github/yuifu/datascience-notebook-millefy/blob/master/examples/test_millefy.ipynb), 
I, Wayne, have included as part of the \`millefy-binder\` repository another notebook that does much the same but in two different ways, starting with BAM files. The idea being that should help anyone looking to use Millefy with BAM files.  
The example BAM files used are in the developer provided \`extdata\` directory.
  
Click [here to open \`test_millefy_with_included_bam_files.ipynb\`](./test_millefy_with_included_bam_files.ipynb).  
'''
ntbk = nbf.read("test_millefy.ipynb", as_version = 4)  
new_ntbk = ntbk
additional_cell = nbf.v4.new_markdown_cell(content_for_additional_md_cell)
new_ntbk.cells.append(additional_cell)  
nbf.write(new_ntbk, "TEMPtest_millefyPLUS_POINTER_TEXT_IN_CELL.ipynb", version=4)
EOF

# Add a pause to make sure the script is saved before attempting to run the script.
sleep 0.2

# Run script to add the additional cell
python add_additional_cell.py

# Clean up by removing script since it is no longer needed.
rm add_additional_cell.py
